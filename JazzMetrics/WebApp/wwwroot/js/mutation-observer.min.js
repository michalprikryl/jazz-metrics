class ClassWatcher{constructor(n,t,i,r){this.targetNode=n;this.classToWatch=t;this.classAddedCallback=i;this.classRemovedCallback=r;this.observer=null;this.lastClassState=n.classList.contains(this.classToWatch);this.init()}init(){this.observer=new MutationObserver(this.mutationCallback);this.observe()}observe(){this.observer.observe(this.targetNode,{attributes:!0})}disconnect(){this.observer.disconnect()}mutationCallback = mutationsList =>{for(let n of mutationsList)if(n.type==="attributes"&&n.attributeName==="class"){let t=n.target.classList.contains(this.classToWatch);this.lastClassState!==t&&(this.lastClassState=t,t?this.classAddedCallback(n.target):this.classRemovedCallback(n.target))}}}